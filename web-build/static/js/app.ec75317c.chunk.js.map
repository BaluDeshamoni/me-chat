{"version":3,"sources":["Firebase.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/ListView.js","Screens/HomeScreen.js","Screens/AddChatRoom.js","Screens/ChatScreen.js","App.js"],"names":["app","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","console","log","login","signInWithEmailAndPassword","catch","error","alert","message","KeyboardAvoidingView","behavior","style","styles","container","View","inputcontainer","placeholder","value","onChangeText","text","type","onSubmitEditing","secureTextEntry","title","onPress","containerStyle","Button","navigate","height","StyleSheet","create","width","display","RegisterScreen","username","setUsername","avatar","setAvatar","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","button","ListView","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","source","uri","Content","Title","Subtitle","color","displayname","HomeScreen","signOutUser","signOut","chats","setChats","useLayoutEffect","setOptions","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","SimpleLineIcons","name","size","enterChatRoom","SafeAreaView","ScrollView","AddChatRoom","setChatName","a","async","add","goBack","ChatScreen","route","input","setInput","messages","setMessages","params","headerTitle","flexDirection","alignItems","Text","fontWeight","AntDesign","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","flex","backgroundColor","Platform","OS","keyboardVerticalOffset","contentContainerStyle","paddingTop","sender","position","bottom","right","senderText","receiver","left","receiverText","receiverName","footer","TextInput","inputField","Ionicons","maxWidth","alignSelf","padding","marginRight","marginBottom","borderRadius","fontSize","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component","marginVertical"],"mappings":"4HAcIA,E,gHAGAA,EAFuB,IAAxBC,IAASC,KAAKC,OAETF,IAASG,cAZM,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAUHT,IAASD,MAEjB,IAAMW,EAAKV,IAASU,OACdC,EAAGZ,EAAIa,YCmCEC,EAtDK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,EAA0BC,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,WAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAQR,OAPcV,EAAKW,oBAAmB,SAACC,GACjCA,GACFR,EAAWS,QAAQ,QAErBC,QAAQC,IAAIH,QAIb,IAEH,IAAMI,EAAQ,WACZhB,EACGiB,2BAA2BX,EAAOE,GAClCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,YAEhCd,EAAS,IACTE,EAAY,KAGd,OACE,kBAACa,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,WACrD,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,gBAClB,kBAAC,IAAD,CACEC,YAAY,QACZC,MAAOxB,EACPyB,aAAc,SAACC,GAAD,OAAUzB,EAASyB,IACjCC,KAAK,UAEP,kBAAC,IAAD,CACEJ,YAAY,WACZC,MAAOtB,EACP0B,gBAAiBlB,EACjBmB,iBAAe,EACfJ,aAAc,SAACC,GAAD,OAAUvB,EAAYuB,IACpCC,KAAK,cAGT,kBAAC,IAAD,CAAQG,MAAM,QAAQC,QAASrB,EAAOsB,eAAgBb,EAAOc,SAC7D,kBAAC,IAAD,CACEH,MAAM,WACNH,KAAK,UACLI,QAAS,kBAAMjC,EAAWoC,SAAS,aACnCF,eAAgBb,EAAOc,SAEzB,kBAACZ,EAAA,EAAD,CAAMH,MAAO,CAAEiB,OAAQ,SAOvBhB,EAASiB,IAAWC,OAAO,CAC/BjB,UAAW,CACTkB,MAAO,OACPH,OAAQ,OACRI,QAAS,QAEXjB,eAAgB,GAChBW,OAAQ,KCNKO,EAzDQ,WACrB,MAA0BzC,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,WAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,WAAO0C,EAAP,KAAiBC,EAAjB,KACA,EAA4B3C,mBAAS,IAArC,WAAO4C,EAAP,KAAeC,EAAf,KAEMC,EAAW,WACfnD,EACGoD,+BAA+B9C,EAAOE,GACtC6C,MAAK,SAACzC,GACLA,EAAS0C,KAAKC,cAAc,CAC1BC,YAAaT,EACbU,SAAUR,OAGb/B,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,aAElC,OACE,kBAACC,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,WACrD,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,gBAClB,kBAAC,IAAD,CACEC,YAAY,WACZC,MAAOiB,EACPhB,aAAc,SAACC,GAAD,OAAUgB,EAAYhB,IACpCC,KAAK,aAEP,kBAAC,IAAD,CACEJ,YAAY,QACZC,MAAOxB,EACPyB,aAAc,SAACC,GAAD,OAAUzB,EAASyB,IACjCC,KAAK,UAEP,kBAAC,IAAD,CACEJ,YAAY,WACZC,MAAOtB,EACP2B,iBAAe,EACfJ,aAAc,SAACC,GAAD,OAAUvB,EAAYuB,IACpCC,KAAK,aAEP,kBAAC,IAAD,CACEJ,YAAY,wBACZC,MAAOmB,EACPlB,aAAc,SAACC,GAAD,OAAUkB,EAAUlB,IAClCE,gBAAiBiB,EACjBlB,KAAK,YAGT,kBAAC,IAAD,CACEG,MAAM,WACNC,QAASc,EACTb,eAAgBb,EAAOc,SAEzB,kBAACZ,EAAA,EAAD,CAAMH,MAAO,CAAEiB,OAAQ,SAOvBhB,EAASiB,IAAWC,OAAO,CAC/BjB,UAAW,GACXE,eAAgB,GAChB8B,OAAQ,K,QC7BKC,EAjCE,SAAC,GAAiC,IAAD,MAA9BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAChC,EAAwCzD,mBAAS,IAAjD,WAAO0D,EAAP,KAAqBC,EAArB,KAcA,OAZAtD,qBAAU,WASR,OARcT,EACXgE,WAAW,SACXC,IAAIN,GACJK,WAAW,YACXE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAAD,OACVL,EAAgBK,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,iBAMnD,kBAAC,IAAD,CAAUC,IAAKb,EAAIvB,QAAS,kBAAMyB,EAAUF,EAAIC,IAAWa,eAAa,GACtE,kBAAC,IAAD,CACEC,SAAO,EACPC,OAAQ,CACNC,IAAG,SAAEd,EAAa,SAAf,EAAE,EAAiBN,YAG1B,kBAAC,IAASqB,QAAV,KACE,kBAAC,IAASC,MAAV,KAAiBlB,GACjB,kBAAC,IAASmB,SAAV,CAAmBxD,MAAO,CAAEyD,MAAO,SAAnC,SACGlB,EAAa,SADhB,EACG,EAAiBmB,YADpB,YACoCnB,GADpC,SACoCA,EAAe,SADnD,EACoC,EAAmB1C,Y,GAShDqB,IAAWC,OAAO,I,wBCgDlBwC,EA9EI,SAAC,GAAoB,IAAlB/E,EAAiB,EAAjBA,WACdgF,EAAc,WAClBpF,EACGqF,UACAhC,MAAK,WACJjD,EAAWS,QAAQ,YAEpBK,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,aAElC,EAA0BhB,mBAAS,IAAnC,WAAOiF,EAAP,KAAcC,EAAd,KAEA7E,qBAAU,WASR,OARcT,EAAGgE,WAAW,SAASG,YAAW,SAACC,GAAD,OAC9CkB,EACElB,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAC1BN,GAAIM,EAAIN,GACRY,KAAMN,EAAIM,iBAKf,IAEHgB,2BAAgB,WACdpF,EAAWqF,WAAW,CACpBrD,MAAO,SACPsD,WAAY,wBACV,kBAAC/D,EAAA,EAAD,CAAMH,MAAO,CAAEmE,WAAY,KACzB,kBAACC,EAAA,EAAD,CAAkBvD,QAAS+C,EAAaS,cAAe,IACrD,kBAAC,IAAD,CACElB,SAAO,EACPC,OAAQ,CACNC,IAAG,MAAE7E,GAAF,SAAEA,EAAM8F,kBAAR,EAAE,EAAmBrC,eAMlCsC,YAAa,kBACX,kBAACpE,EAAA,EAAD,CACEH,MAAO,CACLoB,MAAO,KAGT,kBAACgD,EAAA,EAAD,CACEvD,QAAS,kBAAMjC,EAAWoC,SAAS,aACnCqD,cAAe,IAEf,kBAACG,EAAA,EAAD,CAAiBC,KAAK,SAASC,KAAM,GAAIjB,MAAM,iBAKtD,IAEH,IAAMkB,EAAgB,SAACvC,EAAIC,GACzBzD,EAAWoC,SAAS,OAAQ,CAC1BoB,KACAC,cAIJ,OACE,kBAACuC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGf,EAAMf,KAAI,gBAAGX,EAAH,EAAGA,GAAYC,EAAf,EAAOW,KAAQX,SAAf,OACT,kBAAC,EAAD,CACEY,IAAKb,EACLA,GAAIA,EACJC,SAAUA,EACVC,UAAWqC,U,GAURzD,IAAWC,OAAO,I,gBC3DlB2D,EA1BK,SAAC,GAAkB,IAAjBlG,EAAgB,EAAhBA,WAClB,EAA6BC,mBAAS,IAAtC,WAAOwD,EAAP,KAAgB0C,EAAhB,KASA,OACI,kBAAC5E,EAAA,EAAD,KACI,kBAAC,IAAD,CACAE,YAAY,kBACZI,KAAK,OACLH,MAAO+B,EACP9B,aAAc,SAAAC,GAAI,OAAEuE,EAAYvE,MAEhC,kBAAC,IAAD,CACAK,QAhBM,oBAAAmE,EAAAC,OAAA,kEAAAD,EAAA,MACJvG,EAAGgE,WAAW,SAASyC,IAAI,CAC7B7C,SAASA,IACVR,MAAK,kBAAIjD,EAAWuG,YACtBzF,OAAM,SAAAC,GAAK,OAAEC,MAAMD,OAJV,6DAiBNiB,MAAM,U,GAQHM,IAAWC,OAAO,I,gDCuGlBiE,EA1HI,SAAC,GAA2B,IAAzBxG,EAAwB,EAAxBA,WAAYyG,EAAY,EAAZA,MAChC,EAA0BxG,mBAAS,IAAnC,WAAOyG,EAAP,KAAcC,EAAd,KACA,EAAgC1G,mBAAS,IAAzC,WAAO2G,EAAP,KAAiBC,EAAjB,KAEAzB,2BAAgB,WAcd,OAbcvF,EACXgE,WAAW,SACXC,IAAI2C,EAAMK,OAAOtD,IACjBK,WAAW,YACXE,QAAQ,YAAa,OACrBC,YAAW,SAACC,GAAD,OACV4C,EACE5C,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAC1BN,GAAIM,EAAIN,GACRY,KAAMN,EAAIM,iBAKjB,CAACqC,IAEJrB,2BAAgB,WACdpF,EAAWqF,WAAW,CACpBrD,MAAO,OACP+E,YAAa,wBACX,kBAACxF,EAAA,EAAD,CACEH,MAAO,CACL4F,cAAe,MACfC,WAAY,WAGd,kBAAC,IAAD,CAAQ1C,SAAO,EAACC,OAAQ,CAAEC,IAAG,SAAEmC,EAAS,SAAX,EAAE,EAAaxC,KAAKf,YACjD,kBAAC6D,EAAA,EAAD,CAAM9F,MAAO,CAAEmE,WAAY,GAAI4B,WAAY,QACxCV,EAAMK,OAAOrD,YAIpB6B,WAAY,kBACV,kBAACE,EAAA,EAAD,CACEC,cAAe,GACfxD,QAAS,WACPjC,EAAWuG,WAGb,kBAACa,EAAA,EAAD,CAAWvB,KAAK,YAAYC,KAAM,GAAIjB,MAAM,eAIjD,CAAC7E,EAAY4G,IAChB,IAAMS,EAAc,WAClBC,IAASC,UAET1H,EAAGgE,WAAW,SAASC,IAAI2C,EAAMK,OAAOtD,IAAIK,WAAW,YAAYyC,IAAI,CACrEkB,UAAWtI,IAASY,UAAU2H,WAAWC,kBACzCzG,QAASyF,EACT5B,YAAalF,EAAK8F,YAAYtC,YAC9BlD,MAAON,EAAK8F,YAAYxF,MACxBmD,SAAUzD,EAAK8F,YAAYrC,WAE7BsD,EAAS,KAGX,OACE,kBAACX,EAAA,EAAD,CAAc5E,MAAO,CAAEuG,KAAM,EAAGC,gBAAiB,UAC/C,kBAAC1G,EAAA,EAAD,CACEC,SAA0B,QAAhB0G,IAASC,GAAe,UAAY,SAC9C1G,MAAOC,EAAOC,UACdyG,uBAAwB,IAExB,oCACE,kBAAC9B,EAAA,EAAD,CAAY+B,sBAAuB,CAAEC,WAAY,KAC9CrB,EAASzC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAP,OACZA,EAAKlE,QAAUN,EAAK8F,YAAYxF,MAC9B,kBAACqB,EAAA,EAAD,CAAM8C,IAAKb,EAAIpC,MAAOC,EAAO6G,QAC3B,kBAAC,IAAD,CACE3D,SAAO,EACPuB,KAAM,GACN5D,eAAgB,CACdiG,SAAU,WACVC,QAAS,GACTC,OAAQ,GAEV7D,OAAQ,CAAEC,IAAKL,EAAKf,YAEtB,kBAAC6D,EAAA,EAAD,CAAM9F,MAAOC,EAAOiH,YAAalE,EAAKnD,UAGxC,kBAACM,EAAA,EAAD,CAAM8C,IAAKb,EAAIpC,MAAOC,EAAOkH,UAC3B,kBAAC,IAAD,CACEhE,SAAO,EACPuB,KAAM,GACN5D,eAAgB,CACdiG,SAAU,WACVC,QAAS,GACTI,MAAO,GAEThE,OAAQ,CAAEC,IAAKL,EAAKf,YAEtB,kBAAC6D,EAAA,EAAD,CAAM9F,MAAOC,EAAOoH,cAAerE,EAAKnD,SACxC,kBAACiG,EAAA,EAAD,CAAM9F,MAAOC,EAAOqH,cAAetE,EAAKU,kBAKhD,kBAACvD,EAAA,EAAD,CAAMH,MAAOC,EAAOsH,QAClB,kBAACC,EAAA,EAAD,CACElH,MAAOgF,EACPjF,YAAY,eACZE,aAAc,SAACC,GAAD,OAAU+E,EAAS/E,IACjCR,MAAOC,EAAOwH,WACd/G,gBAAiBuF,IAEnB,kBAAC7B,EAAA,EAAD,CAAkBvD,QAASoF,EAAa5B,cAAe,IACrD,kBAACqD,EAAA,EAAD,CAAUjD,KAAK,OAAOC,KAAM,GAAIjB,MAAM,eAW9CxD,EAASiB,IAAWC,OAAO,CAC/BjB,UAAW,CACTqG,KAAM,GAERO,OAAQ,CACNa,SAAU,MACVC,UAAW,WACXC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdvB,gBAAiB,UACjBwB,aAAc,GACdjB,SAAU,YAEZI,SAAU,CACRQ,SAAU,MACVC,UAAW,aACXC,QAAS,GACT1D,WAAY,GACZ4D,aAAc,GACdvB,gBAAiB,OACjBwB,aAAc,GACdjB,SAAU,YAEZM,aAAc,CACZ5D,MAAO,QACPsC,WAAY,MACZ5B,WAAY,GAEd+C,WAAY,CACVzD,MAAO,QACPsC,WAAY,MACZ+B,YAAa,GAEfR,aAAc,CACZ7D,MAAO,QACPwE,SAAU,GACVlB,SAAU,WACVC,QAAS,GACTjB,WAAY,MACZqB,KAAM,IAERG,OAAQ,CACN3B,cAAe,MACfC,WAAY,SACZzE,MAAO,OACPyG,QAAS,IAEXJ,WAAY,CACVT,OAAQ,EACR/F,OAAQ,GACRsF,KAAM,EACNC,gBAAiB,YACjB/C,MAAO,OACPoE,QAAS,GACTG,aAAc,GACdF,YAAa,MCpLXI,EAAQC,cACC,SAASC,IACtB,OACE,kBAACjI,EAAA,EAAD,CAAMH,MAAuB,QAAhByG,IAASC,IAAgBzG,EAAOC,WAC3C,kBAACmI,EAAA,EAAD,KACE,kBAACH,EAAMI,UAAP,KACE,kBAACJ,EAAMK,OAAP,CAAc9D,KAAK,QAAQ+D,UAAW7J,IACtC,kBAACuJ,EAAMK,OAAP,CAAc9D,KAAK,WAAW+D,UAAWlH,IACzC,kBAAC4G,EAAMK,OAAP,CAAc9D,KAAK,OAAO+D,UAAW7E,IACrC,kBAACuE,EAAMK,OAAP,CAAc9D,KAAK,WAAW+D,UAAW1D,IACzC,kBAACoD,EAAMK,OAAP,CAAc9D,KAAK,OAAO+D,UAAWpD,OAO/C,IAAMnF,EAASiB,IAAWC,OAAO,CAC/BjB,UAAW,CACTkB,MAAO,OACPH,OAAQ,OACR2G,UAAW,SACXa,eAAgB,W","file":"static/js/app.ec75317c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCnWVtEf_ZGN6c4Lt0yQH34eHArjiWGpak\",\r\n    authDomain: \"signal-clone-7f371.firebaseapp.com\",\r\n    projectId: \"signal-clone-7f371\",\r\n    storageBucket: \"signal-clone-7f371.appspot.com\",\r\n    messagingSenderId: \"296121707499\",\r\n    appId: \"1:296121707499:web:22be0b3b33a861af6dc7ae\"\r\n  };\r\n\r\nlet app\r\nif(firebase.apps.length ===0)\r\n{\r\n    app=firebase.initializeApp(firebaseConfig)\r\n}\r\nelse\r\n{\r\n    app=firebase.app()\r\n}\r\nconst auth=firebase.auth()\r\nconst db=app.firestore()\r\nexport { auth,db }","import React, { useEffect, useState } from 'react'\r\nimport { KeyboardAvoidingView, View, StyleSheet } from 'react-native'\r\nimport { Input, Button, Image } from 'react-native-elements'\r\nimport { auth } from '../Firebase'\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  useEffect(() => {\r\n    const unsub = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        navigation.replace('home')\r\n      }\r\n      console.log(authUser)\r\n    })\r\n\r\n    return unsub\r\n  }, [])\r\n\r\n  const login = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message))\r\n\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior='padding' style={styles.container}>\r\n      <View style={styles.inputcontainer}>\r\n        <Input\r\n          placeholder='Email'\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          type='Email'\r\n        />\r\n        <Input\r\n          placeholder='Password'\r\n          value={password}\r\n          onSubmitEditing={login}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          type='password'\r\n        />\r\n      </View>\r\n      <Button title='Login' onPress={login} containerStyle={styles.Button} />\r\n      <Button\r\n        title='Register'\r\n        type='outline'\r\n        onPress={() => navigation.navigate('register')}\r\n        containerStyle={styles.Button}\r\n      />\r\n      <View style={{ height: 100 }}></View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n  },\r\n  inputcontainer: {},\r\n  Button: {},\r\n})\r\n","import React, { useState } from 'react'\r\nimport { KeyboardAvoidingView, View, StyleSheet } from 'react-native'\r\nimport { Input, Button } from 'react-native-elements'\r\nimport { auth } from '../Firebase'\r\n\r\nconst RegisterScreen = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n\r\n  const register = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: username,\r\n          photoURL: avatar,\r\n        })\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  }\r\n  return (\r\n    <KeyboardAvoidingView behavior='padding' style={styles.container}>\r\n      <View style={styles.inputcontainer}>\r\n        <Input\r\n          placeholder='Username'\r\n          value={username}\r\n          onChangeText={(text) => setUsername(text)}\r\n          type='username'\r\n        />\r\n        <Input\r\n          placeholder='Email'\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          type='email'\r\n        />\r\n        <Input\r\n          placeholder='Password'\r\n          value={password}\r\n          secureTextEntry\r\n          onChangeText={(text) => setPassword(text)}\r\n          type='password'\r\n        />\r\n        <Input\r\n          placeholder='Avatar-Drop link here'\r\n          value={avatar}\r\n          onChangeText={(text) => setAvatar(text)}\r\n          onSubmitEditing={register}\r\n          type='avatar'\r\n        />\r\n      </View>\r\n      <Button\r\n        title='Register'\r\n        onPress={register}\r\n        containerStyle={styles.Button}\r\n      />\r\n      <View style={{ height: 100 }}></View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  inputcontainer: {},\r\n  button: {},\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet } from 'react-native'\r\nimport { ListItem, Avatar } from 'react-native-elements'\r\nimport { db } from '../Firebase'\r\n\r\nconst ListView = ({ id, chatName, enterChat }) => {\r\n  const [chatMessages, setChatMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    const unsub = db\r\n      .collection('chats')\r\n      .doc(id)\r\n      .collection('messages')\r\n      .orderBy('timestamp', 'desc')\r\n      .onSnapshot((snapshot) =>\r\n        setChatMessages(snapshot.docs.map((doc) => doc.data()))\r\n      )\r\n    return unsub\r\n  })\r\n\r\n  return (\r\n    <ListItem key={id} onPress={() => enterChat(id, chatName)} bottomDivider>\r\n      <Avatar\r\n        rounded\r\n        source={{\r\n          uri: chatMessages[0]?.photoURL,\r\n        }}\r\n      />\r\n      <ListItem.Content>\r\n        <ListItem.Title>{chatName}</ListItem.Title>\r\n        <ListItem.Subtitle style={{ color: 'grey' }}>\r\n          {chatMessages[0]?.displayname} : {chatMessages?.[0]?.message}\r\n        </ListItem.Subtitle>\r\n      </ListItem.Content>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default ListView\r\n\r\nconst styles = StyleSheet.create({})\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport { ScrollView } from 'react-native'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport ListView from '../components/ListView'\r\nimport { AntDesign, SimpleLineIcons } from '@expo/vector-icons'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { auth, db } from '../Firebase'\r\nimport { SafeAreaView } from 'react-native'\r\nimport { TouchableOpacity } from 'react-native'\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const signOutUser = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigation.replace('login')\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  }\r\n  const [chats, setChats] = useState([])\r\n\r\n  useEffect(() => {\r\n    const unsub = db.collection('chats').onSnapshot((snapshot) =>\r\n      setChats(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    )\r\n    return unsub\r\n  }, [])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: 'Signal',\r\n      headerLeft: () => (\r\n        <View style={{ marginLeft: 20 }}>\r\n          <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n            <Avatar\r\n              rounded\r\n              source={{\r\n                uri: auth?.currentUser?.photoURL,\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n      headerRight: () => (\r\n        <View\r\n          style={{\r\n            width: 60,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate('chatroom')}\r\n            activeOpacity={0.5}\r\n          >\r\n            <SimpleLineIcons name='pencil' size={24} color='black' />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n    })\r\n  }, [])\r\n\r\n  const enterChatRoom = (id, chatName) => {\r\n    navigation.navigate('chat', {\r\n      id,\r\n      chatName,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n        {chats.map(({ id, data: { chatName } }) => (\r\n          <ListView\r\n            key={id}\r\n            id={id}\r\n            chatName={chatName}\r\n            enterChat={enterChatRoom}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({})\r\n","import React, {  useState } from 'react'\r\nimport { StyleSheet, View } from 'react-native'\r\nimport { Input ,Button} from 'react-native-elements'\r\nimport { db } from '../Firebase'\r\n\r\nconst AddChatRoom = ({navigation}) => {\r\n    const [chatName,setChatName]=useState('')\r\n\r\n    const addChat=async()=>{\r\n        await db.collection(\"chats\").add({\r\n            chatName:chatName,\r\n        }).then(()=>navigation.goBack())\r\n        .catch(error=>alert(error))\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Input \r\n            placeholder=\"Enter chat name\"\r\n            type=\"text\"\r\n            value={chatName}\r\n            onChangeText={text=>setChatName(text)}\r\n            />\r\n            <Button \r\n            onPress={addChat}\r\n            title=\"Add\"/>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nexport default AddChatRoom\r\n\r\nconst styles = StyleSheet.create({})\r\n","import React, { useLayoutEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Avatar } from 'react-native-elements'\r\nimport firebase from 'firebase'\r\nimport { AntDesign, Ionicons } from '@expo/vector-icons'\r\nimport { auth, db } from '../Firebase'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { ScrollView } from 'react-native'\r\nimport { SafeAreaView } from 'react-native'\r\nimport { Platform } from 'react-native'\r\nimport { TextInput } from 'react-native'\r\nimport { Keyboard } from 'react-native'\r\n\r\nconst ChatScreen = ({ navigation, route }) => {\r\n  const [input, setInput] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useLayoutEffect(() => {\r\n    const unsub = db\r\n      .collection('chats')\r\n      .doc(route.params.id)\r\n      .collection('messages')\r\n      .orderBy('timestamp', 'asc')\r\n      .onSnapshot((snapshot) =>\r\n        setMessages(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      )\r\n    return unsub\r\n  }, [route])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: 'chat',\r\n      headerTitle: () => (\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar rounded source={{ uri: messages[0]?.data.photoURL }} />\r\n          <Text style={{ marginLeft: 15, fontWeight: '700' }}>\r\n            {route.params.chatName}\r\n          </Text>\r\n        </View>\r\n      ),\r\n      headerLeft: () => (\r\n        <TouchableOpacity\r\n          activeOpacity={0.5}\r\n          onPress={() => {\r\n            navigation.goBack()\r\n          }}\r\n        >\r\n          <AntDesign name='arrowleft' size={24} color='blue' />\r\n        </TouchableOpacity>\r\n      ),\r\n    })\r\n  }, [navigation, messages])\r\n  const sendMessage = () => {\r\n    Keyboard.dismiss()\r\n\r\n    db.collection('chats').doc(route.params.id).collection('messages').add({\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      message: input,\r\n      displayname: auth.currentUser.displayName,\r\n      email: auth.currentUser.email,\r\n      photoURL: auth.currentUser.photoURL,\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: 'white' }}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.container}\r\n        keyboardVerticalOffset={90}\r\n      >\r\n        <>\r\n          <ScrollView contentContainerStyle={{ paddingTop: 10 }}>\r\n            {messages.map(({ id, data }) =>\r\n              data.email === auth.currentUser.email ? (\r\n                <View key={id} style={styles.sender}>\r\n                  <Avatar\r\n                    rounded\r\n                    size={30}\r\n                    containerStyle={{\r\n                      position: 'absolute',\r\n                      bottom: -15,\r\n                      right: -5,\r\n                    }}\r\n                    source={{ uri: data.photoURL }}\r\n                  />\r\n                  <Text style={styles.senderText}>{data.message}</Text>\r\n                </View>\r\n              ) : (\r\n                <View key={id} style={styles.receiver}>\r\n                  <Avatar\r\n                    rounded\r\n                    size={30}\r\n                    containerStyle={{\r\n                      position: 'absolute',\r\n                      bottom: -15,\r\n                      left: -5,\r\n                    }}\r\n                    source={{ uri: data.photoURL }}\r\n                  />\r\n                  <Text style={styles.receiverText}>{data.message}</Text>\r\n                  <Text style={styles.receiverName}>{data.displayname}</Text>\r\n                </View>\r\n              )\r\n            )}\r\n          </ScrollView>\r\n          <View style={styles.footer}>\r\n            <TextInput\r\n              value={input}\r\n              placeholder='send message'\r\n              onChangeText={(text) => setInput(text)}\r\n              style={styles.inputField}\r\n              onSubmitEditing={sendMessage}\r\n            />\r\n            <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\r\n              <Ionicons name='send' size={24} color='blue' />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  sender: {\r\n    maxWidth: '80%',\r\n    alignSelf: 'flex-end',\r\n    padding: 15,\r\n    marginRight: 15,\r\n    marginBottom: 20,\r\n    backgroundColor: '#ECECEC',\r\n    borderRadius: 20,\r\n    position: 'relative',\r\n  },\r\n  receiver: {\r\n    maxWidth: '80%',\r\n    alignSelf: 'flex-start',\r\n    padding: 15,\r\n    marginLeft: 15,\r\n    marginBottom: 20,\r\n    backgroundColor: 'blue',\r\n    borderRadius: 20,\r\n    position: 'relative',\r\n  },\r\n  receiverText: {\r\n    color: 'white',\r\n    fontWeight: '500',\r\n    marginLeft: 5,\r\n  },\r\n  senderText: {\r\n    color: 'black',\r\n    fontWeight: '500',\r\n    marginRight: 5,\r\n  },\r\n  receiverName: {\r\n    color: 'black',\r\n    fontSize: 14,\r\n    position: 'absolute',\r\n    bottom: -15,\r\n    fontWeight: '400',\r\n    left: 25,\r\n  },\r\n  footer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    padding: 15,\r\n  },\r\n  inputField: {\r\n    bottom: 0,\r\n    height: 40,\r\n    flex: 1,\r\n    backgroundColor: 'lightcyan',\r\n    color: 'blue',\r\n    padding: 10,\r\n    borderRadius: 30,\r\n    marginRight: 10,\r\n  },\r\n})\r\n","import React from 'react'\nimport 'react-native-gesture-handler'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet } from 'react-native'\nimport LoginScreen from './Screens/LoginScreen'\nimport RegisterScreen from './Screens/RegisterScreen'\nimport HomeScreen from './Screens/HomeScreen'\nimport AddChatRoom from './Screens/AddChatRoom'\nimport ChatScreen from './Screens/ChatScreen'\n\nimport { View } from 'react-native'\nimport { Platform } from 'react-native'\n\nconst Stack = createStackNavigator()\nexport default function App() {\n  return (\n    <View style={Platform.OS === 'web' && styles.container}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name='login' component={LoginScreen} />\n          <Stack.Screen name='register' component={RegisterScreen} />\n          <Stack.Screen name='home' component={HomeScreen} />\n          <Stack.Screen name='chatroom' component={AddChatRoom} />\n          <Stack.Screen name='chat' component={ChatScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '50vh',\n    height: '90vh',\n    alignSelf: 'center',\n    marginVertical: '30px',\n  },\n})\n"],"sourceRoot":""}